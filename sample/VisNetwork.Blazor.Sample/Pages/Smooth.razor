@page "/smooth"

@using VisNetwork.Blazor.Models

<h1>Smmoth arrow settings</h1>

<div>
    <button @onclick="TogglePhysics" aria-label="TogglePhysics">Toggle Physics @( IsPhysicsEnabled() ? "off" : "on" )</button>

    <Network Id="my-id" @ref="network" Data="@data" class="vis-network-container" Options="NetworkOptions" />
</div>

@code {

    private Network network;

    private NetworkData data;

    private NetworkOptions networkOptions = new NetworkOptions
    {
        AutoResize = true,
        Nodes = new NodeOption
        {
            BorderWidth = 1
        },
        Edges = new EdgeOption
        {
            Arrows = new Arrows {
                To = new ArrowsOptions { Enabled = true }
            }
        },
        Physics = new PhysicsOptions {
            Enabled = false
        }
    };


    protected override void OnInitialized()
    {
        var nodes = new List<Node>();
        var edges = new List<Edge>();

        var fixedNode = new Node("1", "Fixed Node", 1, "ellipse");
        fixedNode.X = 0;
        fixedNode.Y = 0;
        fixedNode.Fixed = new NodeFixedOption{ X = true, Y = true };

        var dragMe = new Node("2", "Drag me", 1, "ellipse");
        dragMe.X = 150;
        dragMe.Y = 130;
        dragMe.Physics = false;

        var obstacle = new Node("3", "Obstacle", 1, "ellipse");
        obstacle.X = 80;
        obstacle.Y = -80;
        obstacle.Fixed = new NodeFixedOption{ X = true, Y = true };

        nodes.Add(fixedNode);
        nodes.Add(dragMe);
        edges.Add(new Edge("1", "2"));

        nodes.Add(obstacle);

        data = new NetworkData
        {
            Edges = edges,
            Nodes = nodes
        };
    }

    private async Task TogglePhysics()
    {
        networkOptions.Physics.Enabled = !networkOptions.Physics.Enabled;
        await network.SetOptions(networkOptions);
    } 

    private bool IsPhysicsEnabled() => networkOptions.Physics.Enabled ?? false;

    private NetworkOptions NetworkOptions(Network network)
    {
        return networkOptions;
    }

}

