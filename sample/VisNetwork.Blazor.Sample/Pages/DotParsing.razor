@page "/dot-parsing"

@using VisNetwork.Blazor.Models

<h1>VisNetwork Samples</h1>

<div>
    <Network @ref="network" Id="my-id" Data="@data" class="vis-network-container" SetupCompletedCallback="NetworkReady"/>
</div>

@code {

    private Network network;

    private NetworkData data;


    protected override void OnInitialized()
    {
        var nodes = new List<Node>();
        var edges = new List<Edge>();

        nodes.Add(new Node("1", "Node 1", 1, "circle"));
        nodes.Add(new Node("2", "Node 2", 2, "ellipse"));
        edges.Add(new Edge("1", "2") { Arrows = new Arrows { To = new ArrowsOptions { Enabled = true } } });

        nodes.Add(new Node("3", "Node 3", 4, "database"));
        edges.Add(new Edge("2", "3") { Arrows = new Arrows { To = new ArrowsOptions { Enabled = true } } });

        data = new NetworkData
        {
            Edges = edges,
            Nodes = nodes
        };
    }

    private async Task NetworkReady()
    {
        var dotString = @"digraph {
                            node [shape=circle fontsize=16]
                            edge [length=100, color=gray, fontcolor=black]

                            A -> A[label=0.5];
                            B -> B[label=1.2] -> C[label=0.7] -- A;
                            B -> D;
                            D -> {B; C}
                            D -> E[label=0.2];
                            F -> F;
                            A [
                                fontcolor=white,
                                color=red,
                            ]
                        }";
        Console.WriteLine($"Parsed network: Before: {dotString}");
        var parsedNetwork = await network.ParseDOTNetwork(dotString);
        Console.WriteLine($"Parsed network: After: {parsedNetwork}");
    }

}