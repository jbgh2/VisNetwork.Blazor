@page "/dot-parsing"

@using VisNetwork.Blazor.Models

<h1>DOT parsing</h1>

<div>
    <Network @ref="network" Id="my-id" Data="@data" class="vis-network-container" SetupCompletedCallback="NetworkReady" />
</div>
<div >
    <textarea rows="10" cols="40" class="form-control textbox-parameters" @bind="dotString"/>
    <button @onclick="OnClick">Update</button>
</div>

@code {

    private Network network;

    private NetworkData data;

    private string dotString = @"digraph {
                            node [shape=circle fontsize=16]
                            edge [length=100, color=gray, fontcolor=black]

                            A -> A[label=""0.5""];
                            B -> B[label=""1.2""] -> C[label=""0.7""] -- A;
                            B -> D;
                            D -> {B; C}
                            D -> E[label=""0.2""];
                            F -> F;
                            A [
                                fontcolor=white,
                                color=red,
                            ]
                        }"; 

    protected override void OnInitialized()
    {
        var nodes = new List<Node>();
        var edges = new List<Edge>();

        data = new NetworkData
            {
                Edges = edges,
                Nodes = nodes
            };
    }

    private async Task NetworkReady()
    {
        Console.WriteLine($"Parsed network: Before: {dotString}");
        var parsedNetwork = await network.ParseDOTNetwork(dotString);

        await network.SetData(parsedNetwork);
        Console.WriteLine($"Parsed network: After: {parsedNetwork}");
    }

    private async Task OnClick()
    {
        try
        {
            await NetworkReady();
        }
        catch(Exception e)
        {
            Console.WriteLine(e);
        }
    }

}